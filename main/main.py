import os

from cffi.backend_ctypes import unicode

print("XSS Vulnerability Scanner", end="\n\n")

# websiteUrl = "http://testfire.net/search.jsp"
websiteUrl = input("Please enter website url: ")
# param = "query"
param = input("Please enter parameter: ")
vulnerablePayload = []
import requests


def getPageDetails(url, params, headers):
    res = requests.get(url, params=params, headers=headers)
    return unicode(res.content, errors='ignore')


def checkVulnerability(url, param):
    payloadFilepath = os.path.realpath(__file__).replace(os.path.basename(__file__), "payload.txt")
    file = open(payloadFilepath, "r")
    # Make request to get headers
    response = requests.get(url.split('?')[0])

    for payload in file:
        content = getPageDetails(url, {param: payload}, response.request.headers)

        if content.__contains__(payload):
            vulnerablePayload.append(payload)


checkVulnerability(websiteUrl, param)

if len(vulnerablePayload) > 0:
    print("Website is vulnerable to following payload")
    print(",".join(vulnerablePayload))
else:
    print("Website is not vulnerable to Reflected XSS attack")
