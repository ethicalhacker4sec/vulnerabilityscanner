from cffi.backend_ctypes import unicode

print("XSS Vulnerability Scanner", end="\n\n")

websiteUrl = "http://testfire.net/search.jsp"
param = "query"
vulnerablePayload = []

def getPageDetails(url, params):
    import requests

    # requests.get(url, params=params, headers=headers)
    # Make request to get headers
    response = requests.get(url.split('?')[0])

    res = requests.get(url, params=params, headers=response.request.headers)
    return unicode(res.content, errors='ignore')

def checkVulnerability(url, param):
    file = open("payload.txt", "r")
    for payload in file:
        print(payload)
        # payload = '<script>alert(1)</script>'
        content = getPageDetails(url, {param: payload})

        if content.__contains__(payload):
            vulnerablePayload.append(payload)

checkVulnerability(websiteUrl, param)

if len(vulnerablePayload) > 0:
    print("Website is vulnerable to following payload")
    print(",".join(vulnerablePayload))
else:
    print("Website is not vulnerable to Reflected XSS attack")
